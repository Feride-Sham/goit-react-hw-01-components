{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendListItem/FriendListItem.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","avatar","location","name","stats","tag","className","style","profile","description","src","alt","label","quantuty","followers","views","likes","Statistics","title","statistics","statList","map","data","item","percentage","id","defaultProps","FriendListItem","friend","isOnline","status","statusOffline","width","FriendList","friends","TransactionHistory","items","transactionHistory","tbody","type","amount","currency","userDB","App","statDB","friendsDB","transactionsDB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c3dfb7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1b6Uw\",\"avatar\":\"Profile_avatar__3EXGc\",\"name\":\"Profile_name__1mP2S\",\"stats\":\"Profile_stats__3yPoO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1QmXl\",\"statList\":\"Statistics_statList__1jdfZ\",\"title\":\"Statistics_title__9pG-t\",\"item\":\"Statistics_item__2aLNg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__18Zla\",\"status\":\"FriendListItem_status__2-_Y-\",\"statusOffline\":\"FriendListItem_statusOffline__MO69h\",\"name\":\"FriendListItem_name__YzuiD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__29xod\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Profile.module.css';\n\nconst Profile = ({ avatar, location, name, stats, tag }) => {\n  return (\n    <div className={style.profile}>\n      <div className={style.description}>\n        <img src={avatar} alt={name} className={style.avatar} />\n        <p className={style.name}>{name}</p>\n        <p className={style.tag}>{tag}</p>\n        <p className={style.location}>{location}</p>\n      </div>\n\n      <ul className={style.stats}>\n        <li>\n          <span className={style.label}>Followers </span>\n          <span className={style.quantuty}>{stats.followers}</span>\n        </li>\n        <li>\n          <span className=\"label\">Views </span>\n          <span className=\"quantity\">{stats.views}</span>\n        </li>\n        <li>\n          <span className=\"label\">Likes </span>\n          <span className=\"quantity\">{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n  tag: PropTypes.string.isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\nimport style from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ stats, title }) => {\n  return (\n    <section className={style.statistics}>\n      {title && <h2 className={style.title}>{title}</h2>}\n\n      <ul className={style.statList}>\n        {stats.map(data => (\n          <li className={style.item} key={data.id}>\n            <span className={style.label}>{data.label}</span>\n            <span className={style.percentage}>{data.percentage}</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.defaultProps = {\n  title: 'no title',\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default Statistics;\n","import React from 'react';\nimport style from './FriendListItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst FriendListItem = ({ friend }) => {\n  return (\n    <li className={style.item}>\n      <span className={friend.isOnline ? style.status : style.statusOffline}>\n        {friend.isOnline}\n      </span>\n      <img\n        className={style.avatar}\n        src={friend.avatar}\n        alt={friend.name}\n        width=\"48\"\n      />\n      <p className={style.name}>{friend.name}</p>\n    </li>\n  );\n};\n\nFriendListItem.propTypes = {\n  friend: PropTypes.shape({\n    isOnline: PropTypes.bool.isRequired,\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport FriendListItem from './FriendListItem/FriendListItem';\n\nimport PropTypes from 'prop-types';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className=\"friendList\">\n      {friends.map(friend => (\n        <FriendListItem friend={friend} key={friend.id} />\n      ))}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport style from './TransactionHistory.module.css';\nimport PropTypes from 'prop-types';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={style.transactionHistory}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody className={style.tbody}>\n        {items.map(item => (\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}</td>\n            <td>{item.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import './App.css';\nimport Profile from './components/Profile/Profile';\nimport userDB from './db/user.json';\nimport Statistics from './components/Statistics/Statistics';\nimport statDB from './db/statistical-data.json';\nimport FriendList from './components/FriendList/FriendList';\nimport friendsDB from './db/friends.json';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactionsDB from './db/transactions.json';\n\nconst { name, tag, location, avatar, stats } = userDB;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={name}\n        tag={tag}\n        location={location}\n        avatar={avatar}\n        stats={stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statDB} />\n      <FriendList friends={friendsDB} />\n      <TransactionHistory items={transactionsDB} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}